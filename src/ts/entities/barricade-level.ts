import { Scene } from "three";
import { CollisionatorSingleton } from "../collisionator";
import { BarricadeLevelPiece } from "./barricade-level-piece";

// [
//     [ -0.4, -4.6 ], [ -0.35, -4.6 ], [ -0.3, -4.6 ], [ -0.25, -4.6 ], [ -0.2, -4.6 ], [ -0.15, -4.6 ], [ -0.1, -4.6 ], [ -0.5, -4.6 ], [ 0, -4.6 ], [ 0.5, -4.6 ], [ 0.1, -4.6 ], [ 0.15, -4.6 ], [ 0.2, -4.6 ], [ 0.25, -4.6 ], [ 0.3, -4.6 ], [ 0.35, -4.6 ], [ 0.4, -4.6 ],
//     [ -0.4, -4.55 ], [ -0.35, -4.55 ], [ -0.3, -4.55 ], [ -0.25, -4.55 ], [ -0.2, -4.55 ], [ -0.15, -4.55 ], [ -0.1, -4.55 ], [ -0.5, -4.55 ], [ 0, -4.55 ], [ 0.5, -4.55 ], [ 0.1, -4.55 ], [ 0.15, -4.55 ], [ 0.2, -4.55 ], [ 0.25, -4.55 ], [ 0.3, -4.55 ], [ 0.35, -4.55 ], [ 0.4, -4.55 ],
//     [ -0.4, -4.5 ], [ -0.35, -4.5 ], [ -0.3, -4.5 ], [ -0.25, -4.5 ], [ -0.2, -4.5 ], [ -0.15, -4.5 ], [ -0.1, -4.5 ], [ -0.5, -4.5 ], [ 0, -4.5 ], [ 0.5, -4.5 ], [ 0.1, -4.5 ], [ 0.15, -4.5 ], [ 0.2, -4.5 ], [ 0.25, -4.5 ], [ 0.3, -4.5 ], [ 0.35, -4.5 ], [ 0.4, -4.5 ],
//     [ -0.4, -4.45 ], [ -0.35, -4.45 ], [ -0.3, -4.45 ], [ -0.25, -4.45 ], [ -0.2, -4.45 ], [ -0.15, -4.45 ], [ -0.1, -4.45 ], [ -0.5, -4.45 ], [ 0, -4.45 ], [ 0.5, -4.45 ], [ 0.1, -4.45 ], [ 0.15, -4.45 ], [ 0.2, -4.45 ], [ 0.25, -4.45 ], [ 0.3, -4.45 ], [ 0.35, -4.45 ], [ 0.4, -4.45 ],
//     [ -0.4, -4.4 ], [ -0.35, -4.4 ], [ -0.3, -4.4 ], [ -0.25, -4.4 ], [ -0.2, -4.4 ], [ -0.15, -4.4 ], [ -0.1, -4.4 ], [ -0.5, -4.4 ], [ 0, -4.4 ], [ 0.5, -4.4 ], [ 0.1, -4.4 ], [ 0.15, -4.4 ], [ 0.2, -4.4 ], [ 0.25, -4.4 ], [ 0.3, -4.4 ], [ 0.35, -4.4 ], [ 0.4, -4.4 ],
//     [ -0.4, -4.35 ], [ -0.35, -4.35 ], [ -0.3, -4.35 ], [ -0.25, -4.35 ], [ -0.2, -4.35 ], [ -0.15, -4.35 ], [ -0.1, -4.35 ], [ -0.5, -4.35 ], [ 0, -4.35 ], [ 0.5, -4.35 ], [ 0.1, -4.35 ], [ 0.15, -4.35 ], [ 0.2, -4.35 ], [ 0.25, -4.35 ], [ 0.3, -4.35 ], [ 0.35, -4.35 ], [ 0.4, -4.35 ],
//     [ -0.4, -4.3 ], [ -0.35, -4.3 ], [ -0.3, -4.3 ], [ -0.25, -4.3 ], [ -0.2, -4.3 ], [ -0.15, -4.3 ], [ -0.1, -4.3 ], [ -0.5, -4.3 ], [ 0, -4.3 ], [ 0.5, -4.3 ], [ 0.1, -4.3 ], [ 0.15, -4.3 ], [ 0.2, -4.3 ], [ 0.25, -4.3 ], [ 0.3, -4.3 ], [ 0.35, -4.3 ], [ 0.4, -4.3 ],
//     [ -0.4, -4.25 ], [ -0.35, -4.25 ], [ -0.3, -4.25 ], [ -0.25, -4.25 ], [ -0.2, -4.25 ], [ -0.15, -4.25 ], [ -0.1, -4.25 ], [ -0.5, -4.25 ], [ 0, -4.25 ], [ 0.5, -4.25 ], [ 0.1, -4.25 ], [ 0.15, -4.25 ], [ 0.2, -4.25 ], [ 0.25, -4.25 ], [ 0.3, -4.25 ], [ 0.35, -4.25 ], [ 0.4, -4.25 ],
//     [ -0.4, -4.2 ], [ -0.35, -4.2 ], [ -0.3, -4.2 ], [ -0.25, -4.2 ], [ -0.2, -4.2 ], [ -0.15, -4.2 ], [ -0.1, -4.2 ], [ -0.5, -4.2 ], [ 0, -4.2 ], [ 0.5, -4.2 ], [ 0.1, -4.2 ], [ 0.15, -4.2 ], [ 0.2, -4.2 ], [ 0.25, -4.2 ], [ 0.3, -4.2 ], [ 0.35, -4.2 ], [ 0.4, -4.2 ],
//     [ -0.4, -4.15 ], [ -0.35, -4.15 ], [ -0.3, -4.15 ], [ -0.25, -4.15 ], [ -0.2, -4.15 ], [ -0.15, -4.15 ], [ -0.1, -4.15 ], [ -0.5, -4.15 ], [ 0, -4.15 ], [ 0.5, -4.15 ], [ 0.1, -4.15 ], [ 0.15, -4.15 ], [ 0.2, -4.15 ], [ 0.25, -4.15 ], [ 0.3, -4.15 ], [ 0.35, -4.15 ], [ 0.4, -4.15 ],
//     [ -0.4, -4.1 ], [ -0.35, -4.1 ], [ -0.3, -4.1 ], [ -0.25, -4.1 ], [ -0.2, -4.1 ], [ -0.15, -4.1 ], [ -0.1, -4.1 ], [ -0.5, -4.1 ], [ 0, -4.1 ], [ 0.5, -4.1 ], [ 0.1, -4.1 ], [ 0.15, -4.1 ], [ 0.2, -4.1 ], [ 0.25, -4.1 ], [ 0.3, -4.1 ], [ 0.35, -4.1 ], [ 0.4, -4.1 ],
//     [ -0.4, -4.05 ], [ -0.35, -4.05 ], [ -0.3, -4.05 ], [ -0.25, -4.05 ], [ -0.2, -4.05 ], [ -0.15, -4.05 ], [ -0.1, -4.05 ], [ -0.5, -4.05 ], [ 0, -4.05 ], [ 0.5, -4.05 ], [ 0.1, -4.05 ], [ 0.15, -4.05 ], [ 0.2, -4.05 ], [ 0.25, -4.05 ], [ 0.3, -4.05 ], [ 0.35, -4.05 ], [ 0.4, -4.05 ],
//     [ -0.4, -4 ], [ -0.35, -4 ], [ -0.3, -4 ], [ -0.25, -4 ], [ -0.2, -4 ], [ -0.15, -4 ], [ -0.1, -4 ], [ -0.5, -4 ], [ 0, -4 ], [ 0.5, -4 ], [ 0.1, -4 ], [ 0.15, -4 ], [ 0.2, -4 ], [ 0.25, -4 ], [ 0.3, -4 ], [ 0.35, -4 ], [ 0.4, -4 ],
// ]

// [
//     [ -0.4, -4.6, 0 ], [ -0.3, -4.6, 0 ], [ -0.2, -4.6, 0 ], [ -0.1, -4.6, 0 ], [ 0, -4.6, 0 ], [ 0.1, -4.6, 0 ], [ 0.2, -4.6, 0 ], [ 0.3, -4.6, 0 ], [ 0.4, -4.6, 0 ],
//     [ -0.4, -4.5, 0 ], [ -0.3, -4.5, 0 ], [ -0.2, -4.5, 0 ], [ -0.1, -4.5, 0 ], [ 0, -4.5, 0 ],  [ 0.1, -4.5, 0 ], [ 0.2, -4.5, 0 ], [ 0.3, -4.5, 0 ], [ 0.4, -4.5, 0 ],
//     [ -0.4, -4.4, 0 ], [ -0.3, -4.4, 0 ], [ -0.2, -4.4, 0 ], [ -0.1, -4.4, 0 ], [ 0, -4.4, 0 ],  [ 0.1, -4.4, 0 ], [ 0.2, -4.4, 0 ], [ 0.3, -4.4, 0 ], [ 0.4, -4.4, 0 ],
//     [ -0.4, -4.3, 0 ], [ -0.3, -4.3, 0 ], [ -0.2, -4.3, 0 ], [ -0.1, -4.3, 0 ], [ 0, -4.3, 0 ],  [ 0.1, -4.3, 0 ], [ 0.2, -4.3, 0 ], [ 0.3, -4.3, 0 ], [ 0.4, -4.3, 0 ],
//     [ -0.4, -4.2, 0 ], [ -0.3, -4.2, 0 ], [ -0.2, -4.2, 0 ], [ -0.1, -4.2, 0 ], [ 0, -4.2, 0 ],  [ 0.1, -4.2, 0 ], [ 0.2, -4.2, 0 ], [ 0.3, -4.2, 0 ], [ 0.4, -4.2, 0 ],
//     [ -0.4, -4.1, 0 ], [ -0.3, -4.1, 0 ], [ -0.2, -4.1, 0 ], [ -0.1, -4.1, 0 ], [ 0, -4.1, 0 ],  [ 0.1, -4.1, 0 ], [ 0.2, -4.1, 0 ], [ 0.3, -4.1, 0 ], [ 0.4, -4.1, 0 ],
//     [ -0.4, -4, 0 ], [ -0.3, -4, 0 ], [ -0.2, -4, 0 ], [ -0.1, -4, 0 ], [ 0, -4, 0 ], [ 0.1, -4, 0 ], [ 0.2, -4, 0 ], [ 0.3, -4, 0 ], [ 0.4, -4, 0 ],
// ]

// [
//     [ -0.4, 4.6, 0 ], [ -0.3, 4.6, 0 ], [ -0.2, 4.6, 0 ], [ -0.1, 4.6, 0 ], [ 0, 4.6, 0 ], [ 0.1, 4.6, 0 ], [ 0.2, 4.6, 0 ], [ 0.3, 4.6, 0 ], [ 0.4, 4.6, 0 ],
//     [ -0.4, 4.5, 0 ], [ -0.3, 4.5, 0 ], [ -0.2, 4.5, 0 ], [ -0.1, 4.5, 0 ], [ 0, 4.5, 0 ],  [ 0.1, 4.5, 0 ], [ 0.2, 4.5, 0 ], [ 0.3, 4.5, 0 ], [ 0.4, 4.5, 0 ],
//     [ -0.4, 4.4, 0 ], [ -0.3, 4.4, 0 ], [ -0.2, 4.4, 0 ], [ -0.1, 4.4, 0 ], [ 0, 4.4, 0 ],  [ 0.1, 4.4, 0 ], [ 0.2, 4.4, 0 ], [ 0.3, 4.4, 0 ], [ 0.4, 4.4, 0 ],
//     [ -0.4, 4.3, 0 ], [ -0.3, 4.3, 0 ], [ -0.2, 4.3, 0 ], [ -0.1, 4.3, 0 ], [ 0, 4.3, 0 ],  [ 0.1, 4.3, 0 ], [ 0.2, 4.3, 0 ], [ 0.3, 4.3, 0 ], [ 0.4, 4.3, 0 ],
//     [ -0.4, 4.2, 0 ], [ -0.3, 4.2, 0 ], [ -0.2, 4.2, 0 ], [ -0.1, 4.2, 0 ], [ 0, 4.2, 0 ],  [ 0.1, 4.2, 0 ], [ 0.2, 4.2, 0 ], [ 0.3, 4.2, 0 ], [ 0.4, 4.2, 0 ],
//     [ -0.4, 4.1, 0 ], [ -0.3, 4.1, 0 ], [ -0.2, 4.1, 0 ], [ -0.1, 4.1, 0 ], [ 0, 4.1, 0 ],  [ 0.1, 4.1, 0 ], [ 0.2, 4.1, 0 ], [ 0.3, 4.1, 0 ], [ 0.4, 4.1, 0 ],
//     [ -0.4, 4, 0 ], [ -0.3, 4, 0 ], [ -0.2, 4, 0 ], [ -0.1, 4, 0 ], [ 0, 4, 0 ], [ 0.1, 4, 0 ], [ 0.2, 4, 0 ], [ 0.3, 4, 0 ], [ 0.4, 4, 0 ],
// ]

export const LevelBaricadeBottomPositions: [number, number, number][][] = [
    [],
    [
        [ -0.4, 4.6, 0 ], [ -0.3, 4.6, 0 ], [ -0.2, 4.6, 0 ], [ -0.1, 4.6, 0 ], [ 0, 4.6, 0 ], [ 0.1, 4.6, 0 ], [ 0.2, 4.6, 0 ], [ 0.3, 4.6, 0 ], [ 0.4, 4.6, 0 ],
        [ -0.4, 4.5, 0 ], [ -0.3, 4.5, 0 ], [ -0.2, 4.5, 0 ], [ -0.1, 4.5, 1 ], [ 0, 4.5, 1 ],  [ 0.1, 4.5, 1 ], [ 0.2, 4.5, 0 ], [ 0.3, 4.5, 0 ], [ 0.4, 4.5, 0 ],
        [ -0.4, 4.4, 0 ], [ -0.3, 4.4, 0 ], [ -0.2, 4.4, 0 ], [ -0.1, 4.4, 0 ], [ 0, 4.4, 1 ],  [ 0.1, 4.4, 0 ], [ 0.2, 4.4, 0 ], [ 0.3, 4.4, 0 ], [ 0.4, 4.4, 0 ],
        [ -0.4, 4.3, 0 ], [ -0.3, 4.3, 0 ], [ -0.2, 4.3, 0 ], [ -0.1, 4.3, 0 ], [ 0, 4.3, 1 ],  [ 0.1, 4.3, 0 ], [ 0.2, 4.3, 0 ], [ 0.3, 4.3, 0 ], [ 0.4, 4.3, 0 ],
        [ -0.4, 4.2, 0 ], [ -0.3, 4.2, 0 ], [ -0.2, 4.2, 0 ], [ -0.1, 4.2, 1 ], [ 0, 4.2, 1 ],  [ 0.1, 4.2, 0 ], [ 0.2, 4.2, 0 ], [ 0.3, 4.2, 0 ], [ 0.4, 4.2, 0 ],
        [ -0.4, 4.1, 0 ], [ -0.3, 4.1, 0 ], [ -0.2, 4.1, 0 ], [ -0.1, 4.1, 0 ], [ 0, 4.1, 1 ],  [ 0.1, 4.1, 0 ], [ 0.2, 4.1, 0 ], [ 0.3, 4.1, 0 ], [ 0.4, 4.1, 0 ],
        [ -0.4, 4, 0 ], [ -0.3, 4, 0 ], [ -0.2, 4, 0 ], [ -0.1, 4, 0 ], [ 0, 4, 0 ], [ 0.1, 4, 0 ], [ 0.2, 4, 0 ], [ 0.3, 4, 0 ], [ 0.4, 4, 0 ],
    ]
];

export const LevelBaricadeTopPositions: [number, number, number][][] = [
    [],
    [
        [ -0.4, -4.6, 0 ], [ -0.3, -4.6, 0 ], [ -0.2, -4.6, 0 ], [ -0.1, -4.6, 0 ], [ 0, -4.6, 0 ], [ 0.1, -4.6, 0 ], [ 0.2, -4.6, 0 ], [ 0.3, -4.6, 0 ], [ 0.4, -4.6, 0 ],
        [ -0.4, -4.5, 0 ], [ -0.3, -4.5, 0 ], [ -0.2, -4.5, 0 ], [ -0.1, -4.5, 0 ], [ 0, -4.5, 1 ],  [ 0.1, -4.5, 0 ], [ 0.2, -4.5, 0 ], [ 0.3, -4.5, 0 ], [ 0.4, -4.5, 0 ],
        [ -0.4, -4.4, 0 ], [ -0.3, -4.4, 0 ], [ -0.2, -4.4, 0 ], [ -0.1, -4.4, 1 ], [ 0, -4.4, 1 ],  [ 0.1, -4.4, 0 ], [ 0.2, -4.4, 0 ], [ 0.3, -4.4, 0 ], [ 0.4, -4.4, 0 ],
        [ -0.4, -4.3, 0 ], [ -0.3, -4.3, 0 ], [ -0.2, -4.3, 0 ], [ -0.1, -4.3, 0 ], [ 0, -4.3, 1 ],  [ 0.1, -4.3, 0 ], [ 0.2, -4.3, 0 ], [ 0.3, -4.3, 0 ], [ 0.4, -4.3, 0 ],
        [ -0.4, -4.2, 0 ], [ -0.3, -4.2, 0 ], [ -0.2, -4.2, 0 ], [ -0.1, -4.2, 0 ], [ 0, -4.2, 1 ],  [ 0.1, -4.2, 0 ], [ 0.2, -4.2, 0 ], [ 0.3, -4.2, 0 ], [ 0.4, -4.2, 0 ],
        [ -0.4, -4.1, 0 ], [ -0.3, -4.1, 0 ], [ -0.2, -4.1, 0 ], [ -0.1, -4.1, 1 ], [ 0, -4.1, 1 ],  [ 0.1, -4.1, 1 ], [ 0.2, -4.1, 0 ], [ 0.3, -4.1, 0 ], [ 0.4, -4.1, 0 ],
        [ -0.4, -4, 0 ], [ -0.3, -4, 0 ], [ -0.2, -4, 0 ], [ -0.1, -4, 0 ], [ 0, -4, 0 ], [ 0.1, -4, 0 ], [ 0.2, -4, 0 ], [ 0.3, -4, 0 ], [ 0.4, -4, 0 ],
    ]
    // [
    //     [ -0.4, -4.6 ], [ -0.3, -4.6 ], [ -0.2, -4.6 ], [ -0.1, -4.6 ], [ 0, -4.6 ], [ 0.1, -4.6 ], [ 0.2, -4.6 ], [ 0.3, -4.6 ],
    //     [ -0.4, -4.5 ], [ -0.3, -4.5 ], [ -0.2, -4.5 ], [ 0.1, -4.5 ], [ 0.2, -4.5 ], [ 0.3, -4.5 ],
    //     [ -0.4, -4.4 ], [ -0.3, -4.4 ], [ -0.2, -4.4 ], [ -0.1, -4.4 ], [ 0.1, -4.4 ], [ 0.2, -4.4 ], [ 0.3, -4.4 ],
    //     [ -0.4, -4.3 ], [ -0.3, -4.3 ], [ -0.2, -4.3 ], [ -0.1, -4.3 ], [ 0.1, -4.3 ], [ 0.2, -4.3 ], [ 0.3, -4.3 ],
    //     [ -0.4, -4.2 ], [ -0.3, -4.2 ], [ -0.2, -4.2 ], [ -0.1, -4.2 ], [ 0.1, -4.2 ], [ 0.2, -4.2 ], [ 0.3, -4.2 ],
    //     [ -0.4, -4.1 ], [ -0.3, -4.1 ], [ -0.2, -4.1 ], [ 0.2, -4.1 ], [ 0.3, -4.1 ],
    //     [ -0.4, -4 ], [ -0.3, -4 ], [ -0.2, -4 ], [ -0.1, -4 ], [ 0, -4 ], [ 0.1, -4 ], [ 0.2, -4 ], [ 0.3, -4 ],
    // ],
    // [
    //     [ -0.3, -4.6 ], [ -0.2, -4.6 ], [ -0.1, -4.6 ], [ 0, -4.6 ], [ 0.1, -4.6 ], [ 0.2, -4.6 ], [ 0.3, -4.6 ],
    //     [ -0.3, -4.5 ], [ -0.2, -4.5 ], [ 0.2, -4.5 ], [ 0.3, -4.5 ],
    //     [ -0.3, -4.4 ], [ -0.2, -4.4 ], [ -0.1, -4.4 ], [ 0, -4.4 ], [ 0.2, -4.4 ], [ 0.3, -4.4 ],
    //     [ -0.3, -4.3 ], [ -0.2, -4.3 ], [ 0.2, -4.3 ], [ 0.3, -4.3 ],
    //     [ -0.3, -4.2 ], [ -0.2, -4.2 ], [ 0, -4.2 ],  [ 0.1, -4.2 ], [ 0.2, -4.2 ], [ 0.3, -4.2 ],
    //     [ -0.3, -4.1 ], [ -0.2, -4.1 ], [ 0.2, -4.1 ], [ 0.3, -4.1 ],
    //     [ -0.3, -4 ], [ -0.2, -4 ], [ -0.1, -4 ], [ 0, -4 ], [ 0.1, -4 ], [ 0.2, -4 ], [ 0.3, -4 ],
    // ],
    // [
    //     [ -0.3, -4.6 ], [ -0.2, -4.6 ], [ -0.1, -4.6 ], [ 0, -4.6 ], [ 0.1, -4.6 ], [ 0.2, -4.6 ], [ 0.3, -4.6 ],
    //     [ -0.3, -4.5 ], [ -0.2, -4.5 ], [ 0.2, -4.5 ], [ 0.3, -4.5 ],
    //     [ -0.3, -4.4 ], [ -0.2, -4.4 ], [ -0.1, -4.4 ], [ 0, -4.4 ], [ 0.2, -4.4 ], [ 0.3, -4.4 ],
    //     [ -0.3, -4.3 ], [ -0.2, -4.3 ], [ 0.2, -4.3 ], [ 0.3, -4.3 ],
    //     [ -0.3, -4.2 ], [ -0.2, -4.2 ], [ -0.1, -4.2 ], [ 0, -4.2 ], [ 0.2, -4.2 ], [ 0.3, -4.2 ],
    //     [ -0.3, -4.1 ], [ -0.2, -4.1 ], [ 0.2, -4.1 ], [ 0.3, -4.1 ],
    //     [ -0.3, -4 ], [ -0.2, -4 ], [ -0.1, -4 ], [ 0, -4 ], [ 0.1, -4 ], [ 0.2, -4 ], [ 0.3, -4 ],
    // ],
    // [
    //     [ -0.3, -4.6 ], [ -0.2, -4.6 ], [ -0.1, -4.6 ], [ 0, -4.6 ], [ 0.1, -4.6 ], [ 0.2, -4.6 ], [ 0.3, -4.6 ],
    //     [ -0.3, -4.5 ], [ -0.2, -4.5 ], [ 0, -4.5 ], [ 0.2, -4.5 ], [ 0.3, -4.5 ],
    //     [ -0.3, -4.4 ], [ -0.2, -4.4 ], [ 0, -4.4 ], [ 0.2, -4.4 ], [ 0.3, -4.4 ],
    //     [ -0.3, -4.3 ], [ -0.2, -4.3 ], [ 0.2, -4.3 ], [ 0.3, -4.3 ],
    //     [ -0.3, -4.2 ], [ -0.2, -4.2 ], [ -0.1, -4.2 ], [ 0, -4.2 ], [ 0.2, -4.2 ], [ 0.3, -4.2 ],
    //     [ -0.3, -4.1 ], [ -0.2, -4.1 ], [ -0.1, -4.1 ], [ 0, -4.1 ], [ 0.2, -4.1 ], [ 0.3, -4.1 ],
    //     [ -0.3, -4 ], [ -0.2, -4 ], [ -0.1, -4 ], [ 0, -4 ], [ 0.1, -4 ], [ 0.2, -4 ], [ 0.3, -4 ],
    // ]
];

/**
 * Static index to help name one barricade differenly than another.
 */
 let index: number = 0;

 /**
  * @class
  * An barricade that blocks bullets but is destroyed when hit.
  */
 export class BarricadeLevel {
    /**
     * Holds all the pieces of the barricade.
     */
    private _barricades: BarricadeLevelPiece[] = [];

    /**
     * Reference to the scene, used to remove barricade from rendering cycle once destroyed.
     */
    private _scene: Scene;

    /**
     * Constructor for the Post class
     * @param scene graphic rendering scene object. Used each iteration to redraw things contained in scene.
     * @param level current level number to use in construction of level barricade.
     * @param yPos  layer level for barricade to appear.
     */
    constructor(scene: Scene, level: number, yPos?: number) {
        index++;
        this._scene = scene;

        const barrBottomPositions = LevelBaricadeBottomPositions[level];
        const barrTopPositions = LevelBaricadeTopPositions[level];
        for (let i = 0; i < barrTopPositions.length; i++) {
            let barricade = new BarricadeLevelPiece(this._scene, barrTopPositions[i][0], barrTopPositions[i][1], barrTopPositions[i][2], yPos);
            CollisionatorSingleton.add(barricade);
            this._barricades.push(barricade);
            barricade = new BarricadeLevelPiece(this._scene, barrBottomPositions[i][0], barrBottomPositions[i][1], barrBottomPositions[i][2], yPos);
            CollisionatorSingleton.add(barricade);
            this._barricades.push(barricade);
        }
    }

    /**
     * Removes object from the three.js scene.
     * @param scene graphic rendering scene object. Used each iteration to redraw things contained in scene.
     */
    public removeFromScene(): void {
        this._barricades.filter(x => x.getActive()).forEach(bar => bar.removeFromScene());
    }
}